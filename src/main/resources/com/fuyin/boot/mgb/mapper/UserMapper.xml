<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fuyin.boot.mgb.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.fuyin.boot.mgb.entity.UserDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, phone_number, email, status, last_ip, last_login_time,
    gmt_create, gmt_modified, version, del_flag
  </sql>
  <update id="updateUsernamePhoneNumber" parameterType="com.fuyin.boot.mgb.entity.UserDO">
        update user
        <set>
          <if test="username != null">
            username = #{username,jdbcType=VARCHAR},
          </if>
          <if test="password != null">
            password = #{password,jdbcType=VARCHAR},
          </if>
          <if test="phoneNumber != null">
            phone_number = #{phoneNumber,jdbcType=VARCHAR},
          </if>
          <if test="email != null">
            email = #{email,jdbcType=VARCHAR},
          </if>
          <if test="status != null">
            status = #{status,jdbcType=VARCHAR},
          </if>
          <if test="lastIp != null">
            last_ip = #{lastIp,jdbcType=VARCHAR},
          </if>
          <if test="lastLoginTime != null">
            last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
          </if>
          <if test="gmtCreate != null">
            gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="gmtModified != null">
            gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="version != null">
            version = #{version,jdbcType=INTEGER},
          </if>
          <if test="delFlag != null">
            del_flag = #{delFlag,jdbcType=INTEGER},
          </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="userandrolemap" type="com.fuyin.boot.model.domain.UserAndRoles">
    <!-- user实体类对象：
              private Long id;
              private String username;
              private String password;
              private String phoneNumber;
              private List<RoleDO> roleDOList;-->
    <!--        主键映射-->
    <id property="id" column="uid"/>
    <!--        非主键映射-->
    <result property="phoneNumber" column="uphonenumber"/>
    <result property="gmtCreate" column="ugmtcreate"/>
    <result property="gmtModified" column="ugmtmodified"/>

    <!--        实体类中不是主键也不是非主键的对象映射
             Role实体类对象：
                private Long id;
                private String name;
                private String description;
    -->
    <!--property:绑定对象名称； ofType:绑定集合对象泛型类型        -->
    <collection property="roleDOList" ofType="com.fuyin.boot.mgb.entity.RoleDO">
      <!--            主键映射绑定-->
      <id property="id" column="rid"/>
      <!--            非主键映射绑定-->
      <result property="name" column="rname"/>
      <result property="description" column="rdescription"/>
    </collection>
  </resultMap>
<!--  u.id uid,u.nickname unickname,u.phone_number uphonenumber,-->
<!--  u.gmt_create ugmtcreate,u.gmt_modified ugmtmodified,-->
<!--  r.id rid,r.`name` rname,r.description rdescription-->

  <select id="getAllUserAllRole" resultMap="userandrolemap">
    SELECT DISTINCT ${ew.sqlSelect}
    FROM `user` u
           LEFT JOIN user_role_relation urr
                     ON u.id = urr.user_id
           LEFT JOIN role r
                     ON urr.role_id = r.id
    WHERE u.del_flag = 0
  </select>

</mapper>
